var https = require('https');
var http = require('http');
var fs = require('fs');

const config = require('./configs/config');
const port = config.port;
const host = config.hostName;
const express = require('express');
const app = express();
require('./server/middleware/appMiddleware')(app);
const routes = require('./server/api/v1/api');
const swaggerJsdoc = require('swagger-jsdoc');
const errorHandler = require('./server/middleware/errorHandlingMiddleware');
//Swagger options set up
const options = {
  swaggerDefinition: {
    // Like the one described here: https://swagger.io/specification/#infoObject
    info: {
      title: 'Meal Lab API',
      version: '1.0.0',
      description: 'Test Express API with autogenerated swagger doc',
    },
  },
  // List of files to be processes. You can also set globs './routes/*.js'
  apis: ['./server/api/v1/**/*.js'],
};

const specs = swaggerJsdoc(options);
const swaggerUi = require('swagger-ui-express');

app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));

app.use('/api/v1', routes);

//If using https setup is different leaving this commented out because you need a certificate and stuff
//for it it work and it's a pain to deal with in dev environment
// if(config.useHttps)
// {
//     var options = {
//         key: fs.readFileSync(config.PRIVATE_KEY_PATH,'utf8'),
//         cert: fs.readFileSync(config.CERT_PATH,'utf8')
//        };

//     var server = https.createServer( options, app);
       
//     server.listen(port, host, function(){
//         console.log("server running at https://"+host+":"+port)
//     });
// }
// else{
  // app.listen(port, function () {
  //       console.log("Listening on port " + port);
  //   });
//}
app.listen(port, host, function () {
  console.log("Listening on port " + port);
});

app.use(errorHandler);



